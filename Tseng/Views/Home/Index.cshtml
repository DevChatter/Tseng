
<style>
    .character {
        float: left;
        clear: both;
        height: 175px;
        padding-left: 20px;
    }

    .portrait {
        width: 150px;
        float: left;
    }

        .portrait img {
            width: 115px;
        }

        .portrait.backrow img {
            float: right;
        }

    .stats {
        float: left;
        padding-left: 15px;
    }

    .aqua {
        color: #2ce8df !important;
    }

    :not(.dead) .status {
        color: #c71585 !important;
    }

    .hp-low .current-hp {
        color: #ffa500;
    }

    .slots {
        top: -2px;
        display: block;
        padding: 2px;
        list-style: none;
        position: relative;
        background: rgba(45, 45, 45, 0.4);
        border-right: 1px rgba(180, 180, 180, 0.3) solid;
        border-bottom: 1px rgba(180, 180, 180, 0.3) solid;
        float: left;
        clear: both;
        width: 224px;
        height: 22px;
    }

    .arm {
        top: -8px;
    }

    .slots li {
        display: inline-block;
        padding: 0 !important;
        margin: 0 !important;
        width: 28px;
        height: 22px;
        background-size: 28px 22px;
        background-color: transparent;
        list-style: none;
        float: left;
        position: relative;
        background-image: url('/images/slots-single-normal.png');
    }

        .slots li img {
            width: 18px;
            height: 18px;
            margin: 2px 5px !important;
        }

    .slots.no-growth li {
        background-image: url('/images/slots-single-nothing.png');
    }

    .slots li.linked:nth-child(odd) {
        background-image: url('/images/slots-linked-normal-left.png');
    }

    .slots li.linked:nth-child(even) {
        background-image: url('/images/slots-linked-normal-right.png');
    }

    .slots.no-growth li.linked:nth-child(odd) {
        background-image: url('/images/slots-linked-nothing-left.png');
    }

    .slots.no-growth li.linked:nth-child(even) {
        background-image: url('/images/slots-linked-nothing-right.png');
    }

    .weapon, .armlet, .accessory {
        line-height: 26px;
        margin: 0 !important;
        padding: 0 !important;
    }

        .weapon img, .armlet img, .accessory img {
            height: 24px;
            margin: 0 !important;
            padding: 0 !important;
        }

    .base {
        float: left;
        clear: both;
        width: 100%;
    }

    .gil {
        float: right;
        text-align: right;
    }

    .location {
        float: left;
    }

    .slide {
        display: none;
    }

    .active-slide {
        display: block;
    }

    .fixed {
        display: inline-block;
        margin: 0 !important;
        padding: 0 !important;
        width: 60px;
    }

    .ff7 .text .character.dead * {
        color: #ab0000;
    }

    .ff7 {
        clear: both;
    }

    .hidden {
        visibility: hidden;
    }

    .status span {
        display: none;
    }

    .rainbow {
        animation: rainbow .5s infinite;
    }

    @@keyframes rainbow {
        0% {
            color: orange;
        }

        10% {
            color: purple;
        }

        20% {
            color: red;
        }

        40% {
            color: yellow;
        }

        60% {
            color: green;
        }

        80% {
            color: blue;
        }

        100% {
            color: orange;
        }
    }
</style>


<div class="ff7">
    <div class="layer tl"></div>
    <div class="layer bl"></div>
    <div class="layer tr"></div>
    <div class="layer br"></div>
    <div class="layer border"></div>
    <div class="text">
        <div class="character">
            <div class="portrait">
                <img src="images/character-young-cloud.png" />
            </div>
            <div class="stats">
                <span class="name">Cloud</span>
                <span class="aqua">LV </span><span class="level">7</span> <span class="status"></span><br />
                <span class="aqua">HP </span><span class="current-hp">334</span> / <span class="max-hp">356</span><br />
                <span class="aqua">MP </span><span class="current-mp">34</span> / <span class="max-mp">56</span><br />
                <div class="slide">
                    <ul class="wpn slots">
                        <li class="linked"></li>
                        <li class="linked"></li>
                    </ul>
                    <ul class="arm slots">
                        <li class=""></li>
                    </ul>
                </div>
                <div class="slide active-slide">
                    <span class="aqua fixed">Wpn. </span><span class="weapon"></span><br />
                    <span class="aqua fixed">Arm. </span><span class="armlet"></span><br />
                    <span class="aqua fixed">Acc. </span><span class="accessory"></span>
                </div>
            </div>
        </div>
        <div class="character">
            <div class="portrait">
                <img src="images/character-young-cloud.png" />
            </div>
            <div class="stats">
                <span class="name">Cloud</span>
                <span class="aqua">LV </span><span class="level">7</span> <span class="status"></span><br />
                <span class="aqua">HP </span><span class="current-hp">334</span> / <span class="max-hp">356</span><br />
                <span class="aqua">MP </span><span class="current-mp">34</span> / <span class="max-mp">56</span><br />
                <div class="slide">
                    <ul class="wpn slots">
                        <li class="linked"></li>
                        <li class="linked"></li>
                    </ul>
                    <ul class="arm slots">
                        <li class=""></li>
                    </ul>
                </div>
                <div class="slide active-slide">
                    <span class="aqua fixed">Wpn. </span><span class="weapon"></span><br />
                    <span class="aqua fixed">Arm. </span><span class="armlet"></span><br />
                    <span class="aqua fixed">Acc. </span><span class="accessory"></span>
                </div>
            </div>
        </div>
        <div class="character">
            <div class="portrait">
                <img src="images/character-young-cloud.png" />
            </div>
            <div class="stats">
                <span class="name">Cloud</span>
                <span class="aqua">LV </span><span class="level">7</span> <span class="status"></span><br />
                <span class="aqua">HP </span><span class="current-hp">334</span> / <span class="max-hp">356</span><br />
                <span class="aqua">MP </span><span class="current-mp">34</span> / <span class="max-mp">56</span><br />
                <div class="slide">
                    <ul class="wpn slots">
                        <li class="linked"></li>
                        <li class="linked"></li>
                    </ul>
                    <ul class="arm slots">
                        <li class=""></li>
                    </ul>
                </div>
                <div class="slide active-slide">
                    <span class="aqua fixed">Wpn. </span><span class="weapon"></span><br />
                    <span class="aqua fixed">Arm. </span><span class="armlet"></span><br />
                    <span class="aqua fixed">Acc. </span><span class="accessory"></span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="ff7" style="top: 5px;">
    <div class="layer tl"></div>
    <div class="layer bl"></div>
    <div class="layer tr"></div>
    <div class="layer br"></div>
    <div class="layer border"></div>
    <div class="text">
        <div class="base"><span class="location"></span><span class="gil"></span></div>
    </div>
</div>


<script>
    var charStatus = [];
    charStatus.push([]);
    charStatus.push([]);
    charStatus.push([]);

    var updateCharacters = function () {
        $.getJSON("/Home/Data",
            null,
            function (data) {
                console.log(data);
                $('.gil').text(data.gil + ' Gil');
                $('.location').text(data.location);

                for (var i = 0; i < 3; ++i) {
                    var char = data.party[i];
                    var ch = $('.character:nth-child(' + (i + 1) + ')');

                    if (!char) {
                        ch.addClass('hidden');
                        continue;
                    } else {
                        ch.removeClass("hidden");
                    }
                    ch.find(' .portrait')
                        .html('<img src="/images/character-' + char.face + '.png" />');

                    if (char.backRow) {
                        ch.find('.portrait').addClass('backrow');
                    } else {
                        ch.find('.portrait').removeClass('backrow');

                    }
                    ch.find('.name').text(char.name);
                    if (char.currentHp == 0) {
                        ch.addClass('dead');
                    } else {
                        ch.removeClass('dead');
                    }

                    if (char.currentHp == 7777) {
                        ch.find('.name').addClass('rainbow');
                    } else {
                        ch.find('.name').removeClass('rainbow');
                    }

                    ch.find('.level').text(char.level);
                    ch.find('.current-hp').text(char.currentHp);

                    if (char.currentHp > 0 && char.currentHp < char.maxHp / 4) {
                        ch.addClass('hp-low');
                    } else {
                        ch.removeClass('hp-low');
                    }
                    ch.find('.max-hp').text(char.maxHp);
                    ch.find('.current-mp').text(char.currentMp);
                    ch.find('.max-mp').text(char.maxMp);
                    ch.find('.weapon')
                        .html(
                            '<img src="/images/weapon-'
                            + char.weapon.weaponType.toLowerCase()
                            + '.png" /> '
                            + char.weapon.name);

                    ch.find('.armlet')
                        .html(
                            '<img src="/images/armlet.png" /> '
                            + char.armlet.name);

                    if (char.accessory) {

                        ch.find('.accessory')
                            .html(
                                '<img src="/images/accessory.png" /> ' + char.accessory.name);
                    } else {
                        ch.find('.accessory')
                            .html('');
                    }

                    var wpn = ch.find('.wpn');

                    if (char.weapon.growth === 0) {
                        wpn.addClass('no-growth');
                    } else {
                        wpn.removeClass('no-growth');
                    }

                    wpn.html('');
                    for (var j = 0; j < char.weapon.linkedSlots; ++j) {
                        wpn.append('<li class="linked"></li>');
                    }
                    for (var j = 0; j < char.weapon.singleSlots; ++j) {
                        wpn.append('<li></li>');
                    }

                    var arm = ch.find('.arm');

                    if (char.armlet.growth === 0) {
                        arm.addClass('no-growth');
                    } else {
                        arm.removeClass('no-growth');
                    }
                    arm.html('');
                    for (var j = 0; j < char.armlet.linkedSlots; ++j) {
                        arm.append('<li class="linked"></li>');
                    }
                    for (var j = 0; j < char.armlet.singleSlots; ++j) {
                        arm.append('<li></li>');
                    }
                    for (var m = 0; m < 8; ++m) {
                        var mat = char.weaponMateria[m];
                        var slot = wpn.find(':nth-child(' + (m + 1) + ')');
                        if (mat.typeName != "None") {
                            slot.html('<img src="/images/materia-' + mat.typeName.toLowerCase() + '.png" />');
                        } else {
                            slot.html('');
                        }
                    }
                    for (var m = 0; m < 8; ++m) {
                        var mat = char.armletMateria[m];
                        var slot = arm.find(':nth-child(' + (m + 1) + ')');
                        if (mat.typeName != "None") {
                            slot.html('<img src="/images/materia-' + mat.typeName.toLowerCase() + '.png" />');
                        } else {
                            slot.html('');
                        }
                    }

                    charStatus[i] = char.statusEffects;
                }

            })
            .always(function () {

                setTimeout(updateCharacters, 500);
            });
    }

    var cycleView = function () {
        $('.slide').toggleClass('active-slide');

        setTimeout(cycleView, 5000);
    };

    var index = 0;

    var cycleStatus = function () {
        for (var i = 0; i < 3; ++i) {
            if (charStatus[i].length == 0 || charStatus[i][index % charStatus[i].length] == 'None') {
                $('.character:nth-child(' + (i + 1) + ') .status').html('');
            } else {
                $('.character:nth-child(' + (i + 1) + ') .status').html(charStatus[i][index % charStatus[i].length]);
            }

        }
        ++index;
        if (index > 0 && index == charStatus[0].length * charStatus[1].length * charStatus[2].length) index = 0; // prevent overflowing

        setTimeout(cycleStatus, 1000);
    }


    $(document).ready(function () {
        updateCharacters();

        cycleStatus();
    });
</script>
